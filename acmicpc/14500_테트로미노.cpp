#include <iostream>

using namespace std;

int n,m,map[501][501];

int block[7][4][4][4]={
{
	{
	{1,1,1,1},
	{0,0,0,0},
	{0,0,0,0},
	{0,0,0,0}
	},
	{
	{1,0,0,0},
	{1,0,0,0},
	{1,0,0,0},
	{1,0,0,0}
	},
},
{
	{
	{1,1,0,0},
	{1,1,0,0},
	{0,0,0,0},
	{0,0,0,0}
	},
},
{
	{
	{1,0,0,0},
	{1,0,0,0},
	{1,1,0,0},
	{0,0,0,0}
	},
	{
	{1,1,1,0},
	{1,0,0,0},
	{0,0,0,0},
	{0,0,0,0}
	},
	{
	{1,1,0,0},
	{0,1,0,0},
	{0,1,0,0},
	{0,0,0,0}
	},
	{
	{0,0,1,0},
	{1,1,1,0},
	{0,0,0,0},
	{0,0,0,0}
	},
},
{
	{
	{0,1,0,0},
	{0,1,0,0},
	{1,1,0,0},
	{0,0,0,0}
	},
	{
	{1,0,0,0},
	{1,1,1,0},
	{0,0,0,0},
	{0,0,0,0}
	},
	{
	{1,1,0,0},
	{1,0,0,0},
	{1,0,0,0},
	{0,0,0,0}
	},
	{
	{1,1,1,0},
	{0,0,1,0},
	{0,0,0,0},
	{0,0,0,0}
	},
},
{
	{
	{1,0,0,0},
	{1,1,0,0},
	{0,1,0,0},
	{0,0,0,0}
	},
	{
	{0,1,1,0},
	{1,1,0,0},
	{0,0,0,0},
	{0,0,0,0}
	},
},
{
	{
	{0,1,0,0},
	{1,1,0,0},
	{1,0,0,0},
	{0,0,0,0}
	},
	{
	{1,1,0,0},
	{0,1,1,0},
	{0,0,0,0},
	{0,0,0,0}
	},
},
{
	{
	{1,1,1,0},
	{0,1,0,0},
	{0,0,0,0},
	{0,0,0,0}
	},
	{
	{0,1,0,0},
	{1,1,0,0},
	{0,1,0,0},
	{0,0,0,0}
	},
	{
	{0,1,0,0},
	{1,1,1,0},
	{0,0,0,0},
	{0,0,0,0}
	},
	{
	{1,0,0,0},
	{1,1,0,0},
	{1,0,0,0},
	{0,0,0,0}
	},
}
};

int _max(int a,int b){return a>b?a:b;}

int isOnMap(int y,int x){
	return x>=0 && x<m && y>=0 &&y<n;
}

int getValue(int y, int x,int k){
	int tmp,flg,cnt=0;
	for(int d=0;d<4;++d){
		tmp=0;
		flg=1;
		for(int i=0;i<4;++i){
			for(int j=0;j<4;++j){
				if(block[k][d][i][j]){
					if(!isOnMap(y+i,x+j)){
					flg=0;
					}
				}
			}
		}
		if(!flg) continue;
		for(int i=0;i<4;++i){
			for(int j=0;j<4;++j){
				int ny=y+i;
				int nx=x+j;
				if(block[k][d][i][j]){
					tmp+=map[ny][nx];
				}
			}
		}
		cnt=_max(cnt,tmp);
	}
	return cnt;
}

int solve(){
	int ret=0;
	for(int i=0;i<n;++i){
		for(int j=0;j<m;++j){
			for(int k=0;k<7;++k){
				ret=_max(ret,getValue(i,j,k));
			}
		}
	}
	return ret;
}

int main(void){
	cin>>n>>m;
	for(int i=0;i<n;++i){
		for(int j=0;j<m;++j){
			cin>>map[i][j];
		}
	}
	
	cout<<solve();
	return 0;
}
